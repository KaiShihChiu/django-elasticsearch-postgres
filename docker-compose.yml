
services:
  db:
    image: postgres:16.0
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5400  # 添加此行来设置 PostgreSQL 使用的端口
    ports:
      - "5400:5400"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5400"]  # 检查数据库是否准备就绪
      interval: 10s  # 每 10 秒检查一次
      timeout: 5s  # 每次检查的超时时间
      retries: 5  # 最多重试 5 次，如果都失败则认为服务不健康
      start_period: 30s  # 给数据库一定的时间来完全启动


  elasticsearch:
    image: elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - http.port=9000   # 这里设置为9000
      - ELASTIC_PASSWORD=asdf123520  # 设置 elastic 用户的默认密码
      - xpack.security.enabled=true     # 启用安全功能
      # - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9000:9000"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1.0'
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:asdf123520 --fail http://localhost:9000/_cat/health || exit 1"]  # 健康检查命令
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s



  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - elasticsearch
      # db:
      #   condition: service_healthy  # 确保数据库服务健康后再启动 web
      # elasticsearch:
      #   condition: service_healthy  # 确保 Elasticsearch 服务健康后再启动 web
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5400/postgres
      - ELASTICSEARCH_URL=http://elasticsearch:9000
    restart: always  # 如果容器退出或失败，则自动重启

  ngrok:
    image: ngrok/ngrok:3
    command: http web:8000
    ports:
      - "4040:4040" # ngrok 仪表板的端口
    environment:
      - NGROK_AUTHTOKEN=2kdrXuQMDc0mNub3nwfLgrbiJcG_51xLmqnBGyDPcdcaDMEdJ
      - NGROK_REGION=ap  # ngrok 服务器区域
    depends_on:
      - web

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: D:/LineBot/django-elasticsearch-postgres/docker_volumes/postgres_data
      o: bind

  es_data:
    driver: local
    driver_opts:
      type: none
      device: D:/LineBot/django-elasticsearch-postgres/docker_volumes/es_data
      o: bind